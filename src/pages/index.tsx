import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  return (
    <Layout>
      <Title />
      <div className="flex flex-col items-center gap-2">
        <Greeting />
        <AuthShowcase />
      </div>
    </Layout>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();
  return (
    <div className="flex max-w-xs flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>{sessionData.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

const Layout = ({ children }: { children: React.ReactNode }) => (
  <>
    <Head>
      <title>Create T3 App</title>
      <meta name="description" content="Generated by create-t3-app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
      <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
        {children}
      </div>
    </main>
  </>
);

const Greeting = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  return (
    <p className="text-2xl text-white">
      {hello.data ? hello.data.greeting : "Loading tRPC query..."}
    </p>
  );
};

const Title = () => (
  <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
    Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
  </h1>
);
